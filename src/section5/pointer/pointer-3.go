package main

import "fmt"

// 포인터 역참조값 변경
func rptc(n *int) {
	*n = 77
}

// 단순 int 값 변경
func vptc(n int) {
	n = 77
}

func main() {
	// 포인터 값 전달.
	// 함수, 메서드 호춠시에 매개변수 값을 복사 전달 -> 함수, 메서드 내에서는 원본 값 변경 불가
	// 원본 값 변경 위해서 포인터로 전달.
	// 크기가 큰 배열인 경우 값 복사시에 시스템 부담 -> 포인터로 전달 해결(슬라이스, 맵 참조 전달)
	/*
		특히 배열 같은 경우 100만개의 배열일때 배열을 받는 함수의 매개변수 전달시 100만개 배열을 복사하기 때문
		추가로 메모리를 할당해서 사용하게 되고 바로 소멸되지 않고 GC가 어느정도 시간이 걸리게 되고 리소스 낭비가 되며
		비번하게 호출되는 곳이라면 더더욱 이슈가 됨.
	*/

	// ex1
	var a int = 10
	var b int = 10
	fmt.Println("ex1 : ", a)
	fmt.Println("ex1 : ", b)
	fmt.Println()

	// 주소값을 전달해야 하므로 예외 발생
	// rptc(a)
	rptc(&a)

	vptc(b)
	// 주소값을 전달하면 되지 않으므로 예외 발생
	// vptc(&b)

	fmt.Println("ex1 : ", a) // 역참조하여 원본 주소값을 찾아가서 값을 변경하기 때문에 값이 77으로 변경됨
	fmt.Println("ex1 : ", b) // 복사된 값을 전달 하였고, 복사된곳에 77을 할당되고 함수가 끝나면 소멸되므로 원본 값 변경되지 않음
}
